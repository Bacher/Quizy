{"version":3,"sources":["/Users/Bacher/Projects/Quizy/server/server.es6"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["\nconst https = require('https');\nconst util = require('util');\nconst express = require('express');\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\nconst CONFIG = require('../config.json');\n\nconst APP_ID = CONFIG['app_id'];\nconst SECRET_KEY = CONFIG['secret_key'];\n\n// Connection URL\nvar url = 'mongodb://localhost:27017/quizy';\nMongoClient.connect(url, function(err, db) {\n    assert.equal(null, err);\n\n    console.log(\"Connected correctly to server\");\n\n    const cUsers = db.collection('users');\n\n    const app = express();\n\n    app.get('/ok', async function(req, res) {\n        const code = req.query.code;\n\n        const query =\n            util.format('/access_token?client_id=%s&client_secret=%s&code=%s&redirect_uri=%s',\n                APP_ID,\n                SECRET_KEY,\n                code,\n                'http://localhost:8000/ok'\n            );\n\n        const json = await httpsJSON({\n            host: 'oauth.vk.com',\n            path: query\n        });\n\n        json['session_id'] = genhash(10);\n\n        await cUsers.update(\n            {\n                'user_id': json['user_id']\n            },\n            json,\n            {\n                upsert: 1\n            }\n        );\n\n        res.writeHead(302, {\n            'Location': '/create.html',\n            'Set-Cookie': 'sid=' + json['session_id']\n        });\n\n        res.end();\n\n    });\n\n    app.get('/hello', (req, res) => {\n        res.send('Hello World!');\n    });\n\n    app.use(express.static('../www'));\n\n    const server = app.listen(8000, () => {\n\n        const host = server.address().address;\n        const port = server.address().port;\n\n        console.log('Example app listening at http://%s:%s', host, port);\n\n    });\n\n});\n\nfunction sleep(time) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, time)\n    });\n}\n\nfunction httpsJSON(options) {\n    return new Promise((resolve, reject) => {\n        https\n            .request(options, res => {\n                var chunks = [];\n\n                res.on('data', chunks.push.bind(chunks));\n\n                res.on('end', () => {\n                    try {\n                        resolve(JSON.parse(chunks.join('')));\n                    } catch(e) {\n                        reject(e);\n                    }\n                })\n\n            })\n            .on('error', reject)\n            .end();\n    });\n}\n\n\nvar SYMBOLS_BASE = 'abcdefghijklmnopqrstuvwxyz';\nSYMBOLS_BASE += SYMBOLS_BASE.toUpperCase();\nSYMBOLS_BASE += '0123456789';\n\nfunction genhash(n) {\n    var hash = '';\n    var l = SYMBOLS_BASE.length;\n\n    for (var i = n; i; --i) {\n        hash += SYMBOLS_BASE[Math.floor(Math.random() * l)];\n    }\n\n    return hash;\n}\n"]}